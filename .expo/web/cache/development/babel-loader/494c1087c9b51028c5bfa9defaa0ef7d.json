{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ezrag\\\\Desktop\\\\CS Mobile App\\\\Actual Final Project\\\\TravelApp\\\\components\\\\forms\\\\WishlistForm.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useStickyState from \"../../useStickyState\";\nimport FormField from \"../FormField\";\nimport { Card, ListItem, Icon } from 'react-native-elements';\nimport { formData } from \"../formData\";\nimport wishPage from \"../Wishlist\";\nexport default function WishlistForm(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      city = _useState4[0],\n      setCity = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      country = _useState6[0],\n      setCountry = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var wishlist = route.params.wishlist;\n  var writeItemToStorage = route.params.writeItemToStorage;\n\n  var handleFormValueChange = function handleFormValueChange(key, value) {\n    if (key == 'city') {\n      setCity(value);\n    } else if (key == 'country') {\n      setCountry(value);\n    } else if (key == 'image') {\n      setImage(value);\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var obj = {\n      City: city,\n      Country: country,\n      img: {\n        src: image,\n        alt: \"picture\"\n      }\n    };\n    writeItemToStorage(wishlist.concat(obj));\n    navigation.goBack();\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(FormField, {\n    label: \"City\",\n    formKey: \"city\",\n    placeholder: \"City\",\n    handleFormValueChange: handleFormValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), React.createElement(FormField, {\n    label: \"Country\",\n    formKey: \"country\",\n    placeholder: \"country\",\n    handleFormValueChange: handleFormValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), React.createElement(FormField, {\n    label: \"Image URL\",\n    formKey: \"image\",\n    placeholder: \"Image URL\",\n    handleFormValueChange: handleFormValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), React.createElement(Icon, {\n    raised: true,\n    name: \"check\",\n    type: \"fontisto\",\n    color: \"#57A892\",\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here to translate!\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    defaultValue: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      padding: 10,\n      fontSize: 42\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, text.split(' ').map(function (word) {\n    return word && 'üåç';\n  }).join(' ')), React.createElement(Card, {\n    containerStyle: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 305,\n      height: 300\n    },\n    resizeMode: \"cover\",\n    source: {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, city, \" ,\", country))), React.createElement(Icon, {\n    raised: true,\n    name: \"home\",\n    type: \"fontisto\",\n    color: \"#517fa4\",\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    style: {\n      width: 105,\n      height: 50,\n      bottom: 0\n    },\n    source: require(\"../../media/smallLogo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ezrag/Desktop/CS Mobile App/Actual Final Project/TravelApp/components/forms/WishlistForm.js"],"names":["React","Component","useState","useEffect","useStickyState","FormField","Card","ListItem","Icon","formData","wishPage","WishlistForm","route","navigation","text","setText","city","setCity","country","setCountry","image","setImage","wishlist","params","writeItemToStorage","handleFormValueChange","key","value","handleSubmit","obj","City","Country","img","src","alt","concat","goBack","flex","alignItems","justifyContent","height","padding","fontSize","split","map","word","join","width","uri","styles","navigate","bottom","require","StyleSheet","create","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { Text, View, TextInput, Button, Image, StyleSheet } from 'react-native';\r\nimport useStickyState from '../../useStickyState';\r\nimport FormField from '../FormField';\r\nimport { Card, ListItem, Icon } from 'react-native-elements'\r\nimport { formData } from '../formData';\r\nimport wishPage from '../Wishlist'\r\n// import wishlist from '../../assets/wishlist';\r\n\r\nexport default function WishlistForm({ route, navigation }) {\r\n  const [text, setText] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const wishlist = route.params.wishlist;\r\n  const writeItemToStorage = route.params.writeItemToStorage;\r\n\r\n  const handleFormValueChange = (key, value) => {\r\n    if (key == 'city') {\r\n      setCity(value)\r\n    } else if (key == 'country') {\r\n      setCountry(value)\r\n    } else if (key == 'image') {\r\n      setImage(value)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const obj = {City:city, Country:country, img:{src:image, alt:\"picture\"}}\r\n    writeItemToStorage(wishlist.concat(obj))\r\n    navigation.goBack()\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n    <FormField\r\n      label='City'\r\n      formKey='city'\r\n      placeholder='City'\r\n      handleFormValueChange={handleFormValueChange}\r\n    />\r\n    <FormField\r\n      label='Country'\r\n      formKey='country'\r\n      placeholder='country'\r\n      handleFormValueChange={handleFormValueChange}\r\n    />\r\n    <FormField\r\n      label='Image URL'\r\n      formKey='image'\r\n      placeholder='Image URL'\r\n      handleFormValueChange={handleFormValueChange}\r\n    />\r\n    <Icon raised name = \"check\" type = \"fontisto\" color = \"#57A892\" onPress={handleSubmit} />\r\n\r\n\r\n      <TextInput\r\n        style={{height: 40}}\r\n        placeholder=\"Type here to translate!\"\r\n        onChangeText={text => setText(text)}\r\n        defaultValue={text}\r\n      />\r\n      <Text style={{padding: 10, fontSize: 42}}>\r\n        {text.split(' ').map((word) => word && 'üåç').join(' ')}\r\n      </Text>\r\n\r\n      <Card containerStyle= {{padding:8}}>\r\n        {\r\n            <View>\r\n              <Image\r\n                style= {{ width: 305, height: 300}}\r\n                resizeMode=\"cover\"\r\n                source={{ uri: image }}\r\n              />\r\n              <Text style = {styles.text}>{city} ,{country}</Text>\r\n            </View>\r\n        }\r\n      </Card>\r\n      <Icon raised name = \"home\" type = \"fontisto\" color = \"#517fa4\" onPress={() => navigation.navigate('Home')} />\r\n      <Image\r\n        style= {{ width: 105, height: 50, bottom:0}}\r\n        source=  {require('../../media/smallLogo.png')}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}