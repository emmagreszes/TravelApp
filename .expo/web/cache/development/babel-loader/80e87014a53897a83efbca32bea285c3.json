{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/judithsherbin/Desktop/React/Native/TravelApp/components/MyLocations.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Icon } from 'react-native-elements';\nimport LocationList from \"../containers/LocationList\";\nimport MyLocationsForm from \"./forms/MyLocationsForm\";\nimport { useAsyncStorage } from '@react-native-community/async-storage';\nimport initialLocations from \"../assets/locations\";\nexport default function MyLocations(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var readItemFromStorage = function readItemFromStorage() {\n    var item;\n    return _regeneratorRuntime.async(function readItemFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getItem());\n\n          case 2:\n            item = _context.sent;\n            setMyLocations(JSON.parse(item) || myLocations);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var writeItemToStorage = function writeItemToStorage(newValue) {\n    return _regeneratorRuntime.async(function writeItemToStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(setItem(JSON.stringify(newValue)));\n\n          case 2:\n            setMyLocations(newValue);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readItemFromStorage();\n  }, []);\n\n  var _useState3 = useState(initialLocations),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myLocations = _useState4[0],\n      setMyLocations = _useState4[1];\n\n  var _useAsyncStorage = useAsyncStorage('@myLocations'),\n      getItem = _useAsyncStorage.getItem,\n      setItem = _useAsyncStorage.setItem;\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Icon, {\n    raised: true,\n    name: \"plus-a\",\n    type: \"fontisto\",\n    color: \"#517fa4\",\n    onPress: function onPress() {\n      return navigation.navigate('MyLocationsForm', {\n        writeItemToStorage: writeItemToStorage,\n        myLocations: myLocations\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), React.createElement(LocationList, {\n    myLocations: myLocations || [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here for a special surprise!\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    defaultValue: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      padding: 10,\n      fontSize: 42\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, text.split(' ').map(function (word) {\n    return word && 'üçï';\n  }).join(' ')), React.createElement(Icon, {\n    raised: true,\n    name: \"home\",\n    type: \"fontisto\",\n    color: \"#517fa4\",\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Icon, {\n    raised: true,\n    name: \"arrow-return-left\",\n    type: \"fontisto\",\n    color: \"#517fa4\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/judithsherbin/Desktop/React/Native/TravelApp/components/MyLocations.js"],"names":["React","Component","useState","useEffect","Icon","LocationList","MyLocationsForm","useAsyncStorage","initialLocations","MyLocations","route","navigation","text","setText","readItemFromStorage","getItem","item","setMyLocations","JSON","parse","myLocations","writeItemToStorage","newValue","setItem","stringify","flex","alignItems","justifyContent","navigate","height","padding","fontSize","split","map","word","join","goBack","styles","StyleSheet","create","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Text, View, TextInput, Button, Image, StyleSheet } from 'react-native';\nimport {Icon} from 'react-native-elements';\nimport LocationList from '../containers/LocationList'\nimport MyLocationsForm from './forms/MyLocationsForm'\nimport { useAsyncStorage } from '@react-native-community/async-storage';\nimport initialLocations from '../assets/locations';\n\nexport default function MyLocations({ route, navigation }) {\n  const [text, setText] = useState('');\n\n  const readItemFromStorage = async () => {\n    const item = await getItem();\n    setMyLocations(JSON.parse(item)||myLocations);\n  };\n\n  const writeItemToStorage = async newValue => {\n    await setItem(JSON.stringify(newValue));\n    setMyLocations(newValue);\n  };\n\n  useEffect(() => {\n    readItemFromStorage();\n  }, []);\n\n  const [myLocations,setMyLocations] = useState(initialLocations);\n  const {getItem, setItem} = useAsyncStorage('@myLocations');\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Icon raised name = \"plus-a\" type = \"fontisto\" color = \"#517fa4\" onPress = {() => navigation.navigate('MyLocationsForm', {writeItemToStorage: writeItemToStorage, myLocations: myLocations})} />\n\n\n\n\n      <LocationList myLocations = {myLocations ||[]}/>\n\n\n      <TextInput\n        style={{height: 40}}\n        placeholder=\"Type here for a special surprise!\"\n        onChangeText={text => setText(text)}\n        defaultValue={text}\n      />\n      <Text style={{padding: 10, fontSize: 42}}>\n        {text.split(' ').map((word) => word && 'üçï').join(' ')}\n      </Text>\n      <Icon raised name = \"home\" type = \"fontisto\" color = \"#517fa4\" onPress={() => navigation.navigate('Home')} />\n      <Icon raised name = \"arrow-return-left\" type = \"fontisto\" color = \"#517fa4\" onPress={() => navigation.goBack()} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}