{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ezrag\\\\Desktop\\\\CS Mobile App\\\\Actual Final Project\\\\TravelApp\\\\components\\\\MyLearning.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Icon } from 'react-native-elements';\nimport LearningList from \"../containers/LearningList\";\nimport MyLearningForm from \"./forms/MyLearningForm\";\nimport { useAsyncStorage } from '@react-native-community/async-storage';\nimport initialLocations from \"../assets/learning\";\nexport default function MyLearning(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var readItemFromStorage = function readItemFromStorage() {\n    var item;\n    return _regeneratorRuntime.async(function readItemFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getItem());\n\n          case 2:\n            item = _context.sent;\n            setMyLearning(JSON.parse(item) || myLearning);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var writeItemToStorage = function writeItemToStorage(newValue) {\n    return _regeneratorRuntime.async(function writeItemToStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(setItem(JSON.stringify(newValue)));\n\n          case 2:\n            setMyLearning(newValue);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readItemFromStorage();\n  }, []);\n\n  var _useState3 = useState(initialLocations),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myLearning = _useState4[0],\n      setMyLearning = _useState4[1];\n\n  var _useAsyncStorage = useAsyncStorage('@myLearning'),\n      getItem = _useAsyncStorage.getItem,\n      setItem = _useAsyncStorage.setItem;\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Icon, {\n    raised: true,\n    name: \"plus-a\",\n    type: \"fontisto\",\n    color: \"black\",\n    onPress: function onPress() {\n      return navigation.navigate('MyLearningForm', {\n        writeItemToStorage: writeItemToStorage,\n        myLearning: myLearning\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    styles: {\n      fontFamily: 'Georgia',\n      color: '#330066',\n      fontSize: 40,\n      borderColor: 'black',\n      borderRadius: 12,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Add a meeting \"), React.createElement(LearningList, {\n    myLearning: myLearning || [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/ezrag/Desktop/CS Mobile App/Actual Final Project/TravelApp/components/MyLearning.js"],"names":["React","Component","useState","useEffect","Icon","LearningList","MyLearningForm","useAsyncStorage","initialLocations","MyLearning","route","navigation","text","setText","readItemFromStorage","getItem","item","setMyLearning","JSON","parse","myLearning","writeItemToStorage","newValue","setItem","stringify","flex","alignItems","justifyContent","navigate","fontFamily","color","fontSize","borderColor","borderRadius","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;;;AAEA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,OAAOC,gBAAP;AAEA,eAAe,SAASC,UAAT,OAA2C;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBAChCT,QAAQ,CAAC,EAAD,CADwB;AAAA;AAAA,MACjDU,IADiD;AAAA,MAC3CC,OAD2C;;AAGxD,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPC,OAAO,EADA;;AAAA;AACpBC,YAAAA,IADoB;AAE1BC,YAAAA,aAAa,CAACC,IAAI,CAACC,KAAL,CAAWH,IAAX,KAAkBI,UAAnB,CAAb;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAKA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACnBC,OAAO,CAACL,IAAI,CAACM,SAAL,CAAeF,QAAf,CAAD,CADY;;AAAA;AAEzBL,YAAAA,aAAa,CAACK,QAAD,CAAb;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAKAnB,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAbwD,mBAiBrBZ,QAAQ,CAACM,gBAAD,CAjBa;AAAA;AAAA,MAiBjDY,UAjBiD;AAAA,MAiBtCH,aAjBsC;;AAAA,yBAkB7BV,eAAe,CAAC,aAAD,CAlBc;AAAA,MAkBjDQ,OAlBiD,oBAkBjDA,OAlBiD;AAAA,MAkBxCQ,OAlBwC,oBAkBxCA,OAlBwC;;AAmBxD,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,IAAI,EAAG,QAApB;AAA6B,IAAA,IAAI,EAAG,UAApC;AAA+C,IAAA,KAAK,EAAG,OAAvD;AAA+D,IAAA,OAAO,EAAI;AAAA,aAAMhB,UAAU,CAACiB,QAAX,CAAoB,gBAApB,EAAsC;AAACP,QAAAA,kBAAkB,EAAEA,kBAArB;AAAyCD,QAAAA,UAAU,EAAEA;AAArD,OAAtC,CAAN;AAAA,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE;AAACS,MAAAA,UAAU,EAAE,SAAb;AACdC,MAAAA,KAAK,EAAE,SADO;AAEdC,MAAAA,QAAQ,EAAE,EAFI;AAGdC,MAAAA,WAAW,EAAE,OAHC;AAIdC,MAAAA,YAAY,EAAE,EAJA;AAKdC,MAAAA,SAAS,EAAE;AALG,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAYE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAId,UAAU,IAAG,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAFF;AAkBD","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { Text, View, TextInput, Button, Image, StyleSheet } from 'react-native';\r\nimport {Icon} from 'react-native-elements';\r\nimport LearningList from '../containers/LearningList'\r\nimport MyLearningForm from './forms/MyLearningForm'\r\nimport { useAsyncStorage } from '@react-native-community/async-storage';\r\nimport initialLocations from '../assets/learning';\r\n\r\nexport default function MyLearning({ route, navigation }) {\r\n  const [text, setText] = useState('');\r\n\r\n  const readItemFromStorage = async () => {\r\n    const item = await getItem();\r\n    setMyLearning(JSON.parse(item)||myLearning);\r\n  };\r\n\r\n  const writeItemToStorage = async newValue => {\r\n    await setItem(JSON.stringify(newValue));\r\n    setMyLearning(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    readItemFromStorage();\r\n  }, []);\r\n\r\n  const [myLearning,setMyLearning] = useState(initialLocations);\r\n  const {getItem, setItem} = useAsyncStorage('@myLearning');\r\n  return (\r\n\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Icon raised name = \"plus-a\" type = \"fontisto\" color = \"black\" onPress = {() => navigation.navigate('MyLearningForm', {writeItemToStorage: writeItemToStorage, myLearning: myLearning})} />\r\n      <Text styles={{fontFamily: 'Georgia',\r\n      color: '#330066',\r\n      fontSize: 40,\r\n      borderColor: 'black',\r\n      borderRadius: 12,\r\n      textAlign: 'center'}}>\r\n      Add a meeting </Text>\r\n\r\n\r\n\r\n      <LearningList myLearning = {myLearning ||[]}/>\r\n\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}